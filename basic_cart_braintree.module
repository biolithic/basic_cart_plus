<?php

/**
 * @file
 * Basic cart Braintree module file.
 */

/**
 * Implements hook_config_info().
 */
function basic_cart_braintree_config_info() {
  $prefixes['basic_cart_braintree.settings'] = array(
    'label' => t('Basic Cart Braintree settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

require_once dirname(__FILE__) . '/basic_cart_braintree.theme.inc';

/**
 * Implements hook_permission().
 */
function basic_cart_braintree_permission() {
  return array(
    'administer basic cart' => array(
      'title' => t('Administer basic cart'),
      'description' => t('Perform administration tasks for basic cart.'),
    ),
    'view basic cart orders' => array(
      'title' => t('View basic cart orders'),
      'description' => t('View basic cart orders.'),
    ),
    'use basic cart' => array(
      'title' => t('Use basic cart'),
      'description' => t('Use basic cart (add to cart, remove from cart, checkout).'),
    ),
  );
}

/**
 * Implements hook_init() to run on every page.
 */
function basic_cart_braintree_init()
{
require_once 'lib/Braintree.php';

    if (arg(0) == 'admin' && arg(1) == 'config' && arg(2) == 'services' && arg(3) == 'basic_cart_braintree') {
        $testvariable = config_get('basic_cart_braintree.settings', 'basic_cart_braintree_sslmessage');
        if ($testvariable > 0) {
            global $base_root;
            if (!stristr($base_root, "https")) {
                backdrop_set_message("Your server is using an insecure connection - http - to serve credit card information to the payment processor. ", "error");
            }
        }
    }
}

/**
 * Implements hook_menu().
 */
function basic_cart_braintree_menu() {
  $items = array();

  $items['admin/config/basic_cart_braintree'] = array(
    'title' => 'Basic cart',
    'description' => 'Basic cart content type selection.',
    'position' => 'left',
    'weight' => -10,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer basic cart'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/basic_cart_braintree/settings'] = array(
    'title' => 'Basic cart',
    'description' => 'Basic cart content type selection.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('basic_cart_braintree_admin_content_type'),
    'access arguments' => array('administer basic cart'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'basic_cart_braintree.admin.inc',
  );

  $items['admin/config/basic_cart_braintree/settings/settings'] = array(
    'title' => 'Settings',
    'description' => 'Basic cart content type selection.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('basic_cart_braintree_admin_content_type'),
    'access arguments' => array('administer basic cart'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'basic_cart_braintree.admin.inc',
    'weight' => 5,
  );

  $items['admin/config/basic_cart_braintree/settings/checkout'] = array(
    'title' => 'Checkout',
    'description' => 'Basic cart checkout settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('basic_cart_braintree_admin_checkout'),
    'access arguments' => array('administer basic cart'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'basic_cart_braintree.admin.inc',
    'weight' => 10,
  );

  $items['cart'] = array(
    'title' => 'Your shopping cart',
    'description' => 'The shopping cart page',
    'page callback' => 'basic_cart_braintree_cart',
    'access arguments' => array('use basic cart'),
    'type' => MENU_CALLBACK,
    'file' => 'basic_cart_braintree.cart.inc',
  );

  $items['cart/add'] = array(
    'title' => 'Add to cart',
    'description' => 'Add to cart url.',
    'page callback' => 'basic_cart_braintree_add_to_cart',
    'access arguments' => array('use basic cart'),
    'type' => MENU_CALLBACK,
    'file' => 'basic_cart_braintree.cart.inc',
  );

  $items['cart/remove'] = array(
    'title' => 'Remove from cart',
    'description' => 'Remove from cart url.',
    'page callback' => 'basic_cart_braintree_remove_from_cart',
    'access arguments' => array('use basic cart'),
    'type' => MENU_CALLBACK,
    'file' => 'basic_cart_braintree.cart.inc',
  );

  $items['checkout'] = array(
    'title' => 'Checkout',
    'description' => 'Checkout.',
    'page callback' => 'basic_cart_braintree_checkout',
    'access arguments' => array('use basic cart'),
    'type' => MENU_CALLBACK,
    'file' => 'basic_cart_braintree.cart.inc',
  );

  $items['checkout/thank-you'] = array(
    'title' => 'Thank you',
    'description' => 'Checkout thank you page.',
    'page callback' => 'basic_cart_braintree_checkout_thank_you',
    'access arguments' => array('use basic cart'),
    'type' => MENU_CALLBACK,
    'file' => 'basic_cart_braintree.cart.inc',
  );

  return $items;
}


/**
 * Implements hook_node_view().
 */
function basic_cart_braintree_node_view($node, $view_mode, $langcode) {
  // Check if the current user has access to basic cart.
  if (user_access('use basic cart')) {
    // Getting node types.
    $node_types = config_get('basic_cart_braintree.settings', 'basic_cart_braintree_content_types');
    if (!is_array($node_types) || empty($node_types)) {
      return;
    }
    // Add to cart button.
    if (!empty($node_types[$node->type]) &&  in_array($node->type, $node_types)) {
      // Price field.
      $price = field_get_items('node', $node, 'price');
      $price = check_plain($price[0]['value']);
      // Price format.
      $price = basic_cart_braintree_price_format($price);
      $node->content['price'] = array(
        '#markup' => theme('basic_cart_braintree_price', array(
          'price' => $price,
        )),
        '#weight' => 30,
      );
      $node->content['basic_cart_braintree_add_to_cart'] = array(
        '#markup' => theme('basic_cart_braintree_add_to_cart', array('nid' => $node->nid)),
        '#weight' => 50,
      );
    }
  }
}

/**
 * Implements hook_theme().
 */
function basic_cart_braintree_theme() {
  return array(
    'basic_cart_braintree_cart_total_price' => array(
      'variables' => array('price' => NULL),
    ),
    'basic_cart_braintree_price' => array(
      'function' => 'basic_cart_braintree_price',
      'variables' => array('price' => NULL),
    ),
    'basic_cart_braintree_add_to_cart' => array(
      'function' => 'basic_cart_braintree_add_to_cart_button',
      'variables' => array('nid' => NULL),
    ),
    'basic_cart_braintree_cart_flat' => array(
      'template' => 'basic_cart_braintree_cart_flat',
      'variables' => array('cart' => NULL, 'price' => NULL, 'vat' => NULL),
    ),
    'basic_cart_braintree_cart_render_block' => array(
      'template' => 'basic_cart_braintree_cart_render_block',
      'variables' => array('cart' => NULL, 'price' => NULL, 'vat' => NULL),
    ),
    'basic_cart_braintree_render_cart_element' => array(
      'render element' => 'form',
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function basic_cart_braintree_block_info() {
  $blocks['shopping_cart'] = array(
    'info' => t('Shopping cart'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function basic_cart_braintree_block_view($delta = '') {
  // Check if the current user has access.
  switch ($delta) {
    case 'shopping_cart':
      if (user_access('use basic cart')) {
        // Price format.
        module_load_include('inc', 'basic_cart_braintree', 'basic_cart_braintree.cart');
        $price = basic_cart_braintree_get_total_price();
        $total = basic_cart_braintree_price_format($price->total);
        $options = array(
          'cart' => basic_cart_braintree_get_cart(),
          'price' => $total,
        );
        // Checking the VAT.
        $vat_is_enabled = (int)config_get('basic_cart_braintree.settings', 'basic_cart_braintree_vat_state');

        if (!empty ($vat_is_enabled) && $vat_is_enabled) {
          $options['vat'] = basic_cart_braintree_price_format($price->vat);
        }

        $block['subject'] = t('Your cart');
        $block['content'] = theme('basic_cart_braintree_cart_render_block', $options);
        return $block;
      }
      break;
  }
}

/**
 * Helper function. Returns true if given node (node object or string node type) is a product.
 */
function basic_cart_braintree_is_product($node) {
  $type = is_object($node) ? $node->type : $node;
  // Getting node types.
  $node_types = basic_cart_braintree_product_types();
  if (empty($node_types) || !is_array($node_types)) {
    return FALSE;
  }
  return in_array($type, $node_types);
}

/**
 * Helper function. Returns an array of basic_cart_braintree product (content) types.
 */
function basic_cart_braintree_product_types(){
  return config_get('basic_cart_braintree.settings', 'basic_cart_braintree_content_types');
}

/**
 * Implementation hook_views_api()
 */
function basic_cart_braintree_views_api() {
  return array(
    'api' => '3.0',
    'path' => drupal_get_path('module', 'basic_cart_braintree') . '/views',
  );
}

















/**
 * The online read me file with instructions for the admin linked from the configuration page of this module
 */
function basic_cart_braintree_readme_view()
{
    // Format output.
    $build = array(
        'render_array_paragraph' => array(
            '#type' => 'markup',
            '#markup' => '<h2>Congradulations on installing the basic_cart_braintree module.</h2><p>This is an e-commerce module for processing payment using braintreepayments.com for membership to sell simple products on your Backdrop site, if you do not feel like using an entire store like Ubercart or Commerce.'
        ),
        'why_render_arrays' => array(
            '#items' => array(
                '- This is made to be simple to set up and sell, but nothing is plug-and-play',
                '- For larger volume of selling, please use Drupal Commerce or Ubercart',
                '- This does not work with other payment gateways such as Paypal or Authorize.net',
                '- The goal is just a simple, quick loading solution',
                '- This requires Javascript to be enabled at all times to function',
                '- Braintree Payments processor and this module do not interact with your Backdrop site in regards to credit card information',
                '',
                'Installing',
                '- Install and enable this module in /sites/all/modules like all other modules',
                '',
                'Configuring',
                '- Set up your banking information and get approved at braintreepayments.com - this will take a day or week',
                '- Open the webpage admin/config/services/basic_cart_braintree and enter your Braintree account details and options',
                '- Braintree will give you a test key pair to test with, so enter these in, DO NOT check the live? box, and click save',
                '',
                'Testing',
                '- Use credit card number 4242424242424242 and cvc number 123 to test.',
                '- Backdrop does not receive or save any transaction info!',
                '- This is a basic starter kit with which you can alter to your liking',
                '',
                'Reports',
                '- You should make views using the Views module for reporting for content type Order',
                '',
                'Uninstalling',
                '- Uninstalling this module removes all of your info from Backdrop!  Not from braintreepayments.com, however.',
                '',
                'Security',
                '- You should probably get your website hosting company to install SSL on your server for customer trust/confidence.  It may not be demanded, though.  For more information, please read https://www.braintreepayments.com/faq .',
                '',
                'To Do:',
                '- more configuration/integration. The following links are probably beneficial to you:',
                'Need merchandise? http://www.cafepress.com/make/personalized-gifts',
                'Need delivery?  https://app.wedeliver.us/merchant/apply/begin',
                'Need bitcoin acceptance?  http://www.programmableweb.com/news/pay-bitcoin-braintrees-bitcoin-api/elsewhere-web/2015/01/27',
            ),
            '#title' => 'How to use:',
            '#theme' => 'item_list'
        )
    );

    return $build;
}
