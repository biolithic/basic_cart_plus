<?php
/**
 * @file
 * Code for the Basic Cart Plus Order feature.
 */
/**
 * Implements hook_node_view().
 */
function basic_cart_plus_order_view($node)
{
    $oid            = $node->nid;
    // Getting the order products.
    $order_products = db_select('basic_cart_plus_order_node')->fields('basic_cart_plus_order_node')->condition('oid', $oid)->execute()->fetchAll();
    // Building the products array.
    if (is_array($order_products)) {
        $products = array();
        foreach ($order_products as $product) {
            $p                           = node_load($product->nid);
            $p->basic_cart_plus_quantity = $product->quantity;
            // Price in a nicer form.
            $price                       = field_get_items('node', $p, 'price');
            $price                       = isset($price[0]['value']) ? check_plain($price[0]['value']) : '';
            $p->price                    = basic_cart_plus_price_format($price);
            $products[]                  = $p;
        }
    }
    // Building the order variables.
    $order          = node_load($oid);
    // Name.
    $name           = check_plain($order->title);
    // Email.
    $email          = field_get_items('node', $order, 'field_email');
    $email          = isset($email[0]['value']) ? check_plain($email[0]['value']) : '';
    // Phone.
    $phone          = field_get_items('node', $order, 'field_phone');
    $phone          = isset($phone[0]['value']) ? check_plain($phone[0]['value']) : '';
    // City.
    $city           = field_get_items('node', $order, 'field_city');
    $city           = isset($city[0]['value']) ? check_plain($city[0]['value']) : '';
    // Zip Code.
    $zipcode        = field_get_items('node', $order, 'field_zipcode');
    $zipcode        = isset($zipcode[0]['value']) ? check_plain($zipcode[0]['value']) : '';
    // Adsress.
    $address        = field_get_items('node', $order, 'field_address');
    $address        = isset($address[0]['value']) ? check_plain($address[0]['value']) : '';
    // Message.
    $message        = field_get_items('node', $order, 'body');
    $message        = isset($message[0]['value']) ? check_plain($message[0]['value']) : '';
    // Total price.
    $total_price    = field_get_items('node', $order, 'field_total_price');
    $total_price    = isset($total_price[0]['value']) ? check_plain($total_price[0]['value']) : '';
    $total_price    = basic_cart_plus_price_format($total_price);
    // VAT.
    $vat            = NULL;
    $vat_is_enabled = (int) config_get('basic_cart_plus.settings', 'basic_cart_plus_vat_state');
    if (!empty($vat_is_enabled) && $vat_is_enabled) {
        $vat = field_get_items('node', $order, 'vat');
        $vat = isset($vat[0]['value']) ? check_plain($vat[0]['value']) : '';
        $vat = basic_cart_plus_price_format($vat);
    }
    // Hide field data.
    unset($node->content['field_email']);
    unset($node->content['field_phone']);
    unset($node->content['field_city']);
    unset($node->content['field_zipcode']);
    unset($node->content['field_address']);
    unset($node->content['field_total_price']);
    // Page title.
    $title = t('Order ID: @oid', array(
        '@oid' => $oid
    ));
    backdrop_set_title($title);
    return theme('basic_cart_plus_order_details', array(
        'name' => $name,
        'email' => $email,
        'phone' => $phone,
        'city' => $city,
        'zipcode' => $zipcode,
        'address' => $address,
        'message' => $message,
        'products' => $products,
        'total_price' => $total_price,
        'vat' => $vat,
        'timestamp' => $node->created
    ));
}
/**
 * Implements hook_menu().
 */
function basic_cart_plus_order_menu()
{
    $items                                 = array();
    $items['admin/structure/orders/%node'] = array(
        'title' => 'Basic Cart Plus Orders',
        'page callback' => 'basic_cart_plus_order_view',
        'page arguments' => array(
            3
        ),
        'access arguments' => array(
            'view basic cart plus orders'
        ),
        'type' => MENU_CALLBACK
    );
    return $items;
}
/**
 * Implements hook_theme().
 */
function basic_cart_plus_order_theme()
{
    return array(
        'basic_cart_plus_order_details' => array(
            'template' => 'basic_cart_plus_order_details',
            'variables' => array(
                'name' => NULL,
                'email' => NULL,
                'phone' => NULL,
                'city' => NULL,
                'zipcode' => NULL,
                'address' => NULL,
                'message' => NULL,
                'products' => NULL,
                'total_price' => NULL,
                'vat' => NULL,
                'timestamp' => NULL
            )
        )
    );
}
/**
 * Registers a new basic cart plus order to the database.
 *
 * @param string $name
 *   The customer's name.
 * @param string $email
 *   The customer's email address.
 * @param array $order_details
 *   The rest of the customer's data (phone, address, message). Non mandatory fields.
 */
function basic_cart_plus_order_register_order($comment)
{
    $cart = basic_cart_plus_get_cart();
    if (!is_array($cart)) {
        return NULL;
    }
    // Registering the new order to the database.
    global $user;
    $user = user_load($user->uid);
    $node           = entity_create('node', array(
        'type' => 'order'
    ));
    $node->uid      = $user->uid;
    $node->title    = $user->mail . " " . REQUEST_TIME;
    $node->language = LANGUAGE_NONE;
    // Body.
    if (isset($comment)) {
        $node->body[$node->language][0]['value'] = $comment;
    } else {
        $node->body[$node->language][0]['value'] = 'default';
    }
    // Email, mandatory field.
    $node->field_order_email[$node->language][0]['value'] = $user->mail;
    // Phone.

        $node->field_order_phone[$node->language][0]['value'] = $user->field_basic_cart_plus_phone[$user->langcode][0]['value'];

    // Address.

        $node->field_order_address[$node->language][0]['value'] = $user->field_basic_cart_plus_address[$user->langcode][0]['value'];

    // Address2.

        $node->field_order_address2[$node->language][0]['value'] = $user->field_basic_cart_plus_address2[$user->langcode][0]['value'];

    // city.

        $node->field_order_city[$node->language][0]['value'] = $user->field_basic_cart_plus_city[$user->langcode][0]['value'];

    // county.
        $node->field_order_county[$node->language][0]['value'] = $user->field_basic_cart_plus_county[$user->langcode][0]['value'];

    // state.
        $node->field_order_state[$node->language][0]['value'] = $user->field_basic_cart_plus_state[$user->langcode][0]['value'];

    // zipcode.
        $node->field_order_zipcode[$node->language][0]['value'] = $user->field_basic_cart_plus_zip[$user->langcode][0]['value'];

    // country.
        $node->field_order_country[$node->language][0]['value'] = $user->field_basic_cart_plus_country[$user->langcode][0]['value'];

    // company.
        $node->field_order_company[$node->language][0]['value'] = $user->field_basic_cart_plus_company[$user->langcode][0]['value'];

    // website.
        $node->field_order_website[$node->language][0]['value'] = $user->field_basic_cart_plus_website[$user->langcode][0]['value'];

    // Total price.
        $price                                                      = basic_cart_plus_get_total_price();
        $node->field_order_total_price[$node->language][0]['value'] = $price->total;

    // VAT.
    $vat_is_enabled = (int) config_get('basic_cart_plus.settings', 'basic_cart_plus_vat_state');
    if (!empty($vat_is_enabled) && $vat_is_enabled) {
        $node->vat[$node->language][0]['value'] = $price->vat;
    }
    // Cart elements.
    foreach ($cart as $cid => $value) {
        if (is_numeric($cid)) {
            $node->field_order_nid[$node->language][$cid]['value']      = $value;
            $node->field_order_quantity[$node->language][$cid]['value'] = $_SESSION['basic_cart_plus']['cart'][$cid . 'quantity'];
        }
    }
    // Registering order.
    $node->save();
    return $node;
}
