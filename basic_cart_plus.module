<?php
/**
 * @file
 * Basic Cart Plus module file.
 */
/**
 * Implements hook_config_info().
 */
function basic_cart_plus_config_info()
{
    $prefixes['basic_cart_plus.settings'] = array(
        'label' => t('Basic Cart Plus settings'),
        'group' => t('Configuration')
    );
    return $prefixes;
}

require_once backdrop_get_path('module', 'basic_cart_plus') . '/basic_cart_plus.theme.inc';
$which_payment = config_get('basic_cart_plus.settings', 'basic_cart_plus_which_payment');
if ($which_payment == 1) {
module_load_include('inc', 'basic_cart_plus_stripe', 'basic_cart_plus_stripe.cart');
}

if ($which_payment == 2) {
module_load_include('inc', 'basic_cart_plus_braintree', 'basic_cart_plus_braintree.cart');
}

/**
 * Implements hook_permission().
 */
function basic_cart_plus_permission()
{
    return array(
        'administer basic cart' => array(
            'title' => t('Administer basic cart'),
            'description' => t('Perform administration tasks for basic cart.')
        ),
        'view basic cart orders' => array(
            'title' => t('View basic cart orders'),
            'description' => t('View basic cart orders.')
        ),
        'use basic cart' => array(
            'title' => t('Use Basic Cart Plus'),
            'description' => t('Use basic cart (add to cart, remove from cart, checkout).')
        )
    );
}
/**
 * Implements hook_init() to run on every page.
 */
function basic_cart_plus_init()
{
    if (arg(0) == 'admin' && arg(1) == 'config') {
        //        $testvariable = config_get('basic_cart_plus.settings', 'basic_cart_plus_sslmessage');
        //        if ($testvariable > 0) {
        global $base_root;
        if (!stristr($base_root, "https")) {
            backdrop_set_message("Your server is using an insecure connection - http - to serve credit card information to the payment processor. ", "error");
            //            }
        }
    }
}
/**
 * Implements hook_menu().
 */
function basic_cart_plus_menu()
{
    $items                                                   = array();
    $items['admin/config/basic_cart_plus']                   = array(
        'title' => 'Basic Cart Plus',
        'description' => 'Basic Cart Plus content type selection.',
        'position' => 'left',
        'weight' => -10,
        'page callback' => 'system_admin_menu_block_page',
        'access arguments' => array(
            'administer Basic Cart Plus'
        ),
        'file' => 'system.admin.inc',
        'file path' => backdrop_get_path('module', 'system')
    );
    $items['admin/config/basic_cart_plus/settings']          = array(
        'title' => 'Basic Cart Plus',
        'description' => 'Basic Cart Plus content type selection.',
        'page callback' => 'backdrop_get_form',
        'page arguments' => array(
            'basic_cart_plus_admin_settings_config'
        ),
        'access arguments' => array(
            'administer Basic Cart Plus'
        ),
        'type' => MENU_NORMAL_ITEM,
        'file' => 'basic_cart_plus.admin.inc'
    );
    $items['admin/config/basic_cart_plus/settings/settings'] = array(
        'title' => 'Settings',
        'description' => 'Basic Cart Plus content type selection.',
        'page callback' => 'backdrop_get_form',
        'page arguments' => array(
            'basic_cart_plus_admin_settings_config'
        ),
        'access arguments' => array(
            'administer Basic Cart Plus'
        ),
        'type' => MENU_DEFAULT_LOCAL_TASK,
        'file' => 'basic_cart_plus.admin.inc',
        'weight' => 5
    );
        $items['admin/config/basic_cart_plus/settings/content'] = array(
        'title' => 'Content',
        'description' => 'Basic Cart Plus content settings.',
        'page callback' => 'backdrop_get_form',
        'page arguments' => array(
            'basic_cart_plus_admin_content_config'
        ),
        'access arguments' => array(
            'administer Basic Cart Plus'
        ),
        'type' => MENU_LOCAL_TASK,
        'file' => 'basic_cart_plus.admin.inc',
        'weight' => 9
    );
    $items['admin/config/basic_cart_plus/settings/payment'] = array(
        'title' => 'Payment',
        'description' => 'Basic Cart Plus payment settings.',
        'page callback' => 'backdrop_get_form',
        'page arguments' => array(
            'basic_cart_plus_admin_payment_config'
        ),
        'access arguments' => array(
            'administer Basic Cart Plus'
        ),
        'type' => MENU_LOCAL_TASK,
        'file' => 'basic_cart_plus.admin.inc',
        'weight' => 10
    );
    $items['admin/config/basic_cart_plus/settings/checkout'] = array(
        'title' => 'Checkout',
        'description' => 'Basic Cart Plus checkout settings.',
        'page callback' => 'backdrop_get_form',
        'page arguments' => array(
            'basic_cart_plus_admin_checkout_config'
        ),
        'access arguments' => array(
            'administer Basic Cart Plus'
        ),
        'type' => MENU_LOCAL_TASK,
        'file' => 'basic_cart_plus.admin.inc',
        'weight' => 11
    );
    $items['cart']                                           = array(
        'title' => 'Your shopping cart',
        'description' => 'The shopping cart page',
        'page callback' => 'basic_cart_plus_cart',
        'access arguments' => array(
            'use basic cart'
        ),
        'type' => MENU_CALLBACK,
        'file' => 'basic_cart_plus.cart.inc'
    );
    $items['cart/add']                                       = array(
        'title' => 'Add to cart',
        'description' => 'Add to cart url',
        'page callback' => 'basic_cart_plus_add_to_cart',
        'access arguments' => array(
            'use basic cart'
        ),
        'type' => MENU_CALLBACK,
        'file' => 'basic_cart_plus.cart.inc'
    );
    $items['cart/remove']                                    = array(
        'title' => 'Remove from cart',
        'description' => 'Remove from cart url',
        'page callback' => 'basic_cart_plus_remove_from_cart',
        'access arguments' => array(
            'use basic cart'
        ),
        'type' => MENU_CALLBACK,
        'file' => 'basic_cart_plus.cart.inc'
    );
    $items['checkout']                                       = array(
        'title' => 'Checkout',
        'description' => 'Checkout.',
        'page callback' => 'basic_cart_plus_checkout',
        'access arguments' => array(
            'use basic cart'
        ),
        'type' => MENU_CALLBACK,
        'file' => 'basic_cart_plus.cart.inc'
    );
    $items['checkout/thank-you']                             = array(
        'title' => 'Thank you',
        'description' => 'Checkout thank you page',
        'page callback' => 'basic_cart_plus_checkout_thank_you',
        'access arguments' => array(
            'use basic cart'
        ),
        'type' => MENU_CALLBACK,
        'file' => 'basic_cart_plus.cart.inc'
    );
    return $items;
}
/**
 * Implements hook_node_view().
 */
function basic_cart_plus_node_view($node, $view_mode, $langcode)
{
    // Check if the current user has access to basic cart.
    if (user_access('use basic cart')) {
        // Getting node types.
        $node_types = config_get('basic_cart_plus.settings', 'basic_cart_plus_content_types');
        if (!is_array($node_types) || empty($node_types)) {
            return;
        }
        // Add to cart button.
        if (!empty($node_types[$node->type]) && in_array($node->type, $node_types)) {
            // Price field.
            $price                                        = field_get_items('node', $node, 'price');
            $price                                        = check_plain($price[0]['value']);
            // Price format.
            $price                                        = basic_cart_plus_price_format($price);
            $node->content['price']                       = array(
                '#markup' => theme('basic_cart_plus_price', array(
                    'price' => $price
                )),
                '#weight' => 30
            );
            $node->content['basic_cart_plus_add_to_cart'] = array(
                '#markup' => theme('basic_cart_plus_add_to_cart', array(
                    'nid' => $node->nid
                )),
                '#weight' => 50
            );
        }

if ($view_mode != 'rss') {
        global $user;
        foreach (array_keys(node_type_get_names()) as $term) {
          $testvariable = "paywall_member_" . $term;
          $isenabled = config_get('basic_cart_plus.settings', $testvariable);
            if ($node->type == $term && (arg(1) != $node->uid) && ($isenabled > 0) && !in_array("paywall_member", $user->roles)) {
                $testvariable = config_get('basic_cart_plus.settings', "paywall_member_" . $term);
                global $base_url;
//                $thehtml               = "<a href='" . $base_url . "/checkout' id='buynowbutton' name='buynowbutton' class-'buynowbutton button btn'>Get exclusive access now!</a>";
$thehtml = "<a href='" . $base_url . "/cart/add/" . $node->nid . "' id='buynowbutton' name='buynowbutton' class='buynowbutton button btn basic-cart-add-to-cart-link'>Get exclusive access now!</a>";
                unset($node->content["links"]);

                $node->content['node'] = array(
                    '#markup' => $thehtml,
                    '#weight' => 100
                );
            }
        }
    }


    }
}



/**
 * Implementation of hook_node_view_alter().
 */
function basic_cart_plus_node_view_alter(&$build)
{
    $contenttype  = $build['#bundle'];
    $contenttype  = "paywall_member_" . $contenttype;
    $testvariable = config_get('basic_cart_plus.settings', $contenttype);
    if ($testvariable > 0) {
        $node = $build['#node'];
        global $user;
        if ($build['#view_mode'] != 'teaser' && !in_array("paywall_member", $user->roles)) {
            basic_cart_plus_alter_node($build);
        }
    }
}

function basic_cart_plus_alter_node(&$build)
{
    $view_mode = $build['#view_mode'];
    if ($view_mode != 'teaser') {
        $node     = $build['#node'];
        $langcode = $build['#langcode'];

        $node->body['und']['0']['value']      = $node->body['und']['0']['summary'];
        $node->body['und']['0']['safe_value'] = $node->body['und']['0']['summary'];
        node_build_content($node, 'teaser', $langcode);
        unset($node->content['links']['node']['#links']['node-readmore']);
        $build = $node->content;
        unset($node->content);

        $build += array(
            '#theme' => 'node',
            '#node' => $node,
            '#view_mode' => 'teaser',
            '#language' => $langcode
        );

        if (!empty($node->nid) && !($view_mode == 'full' && node_is_page($node))) {
            $build['#contextual_links']['node'] = array(
                'node',
                array(
                    $node->nid
                )
            );
        }

        $type = 'node';
        backdrop_alter(array(
            'node_view',
            'entity_view'
        ), $build, $type);
        $build['#view_mode'] = $view_mode;
    }
}



/**
 * Implements hook_theme().
 */
function basic_cart_plus_theme()
{
    return array(
        'basic_cart_plus_cart_total_price' => array(
            'variables' => array(
                'price' => NULL
            )
        ),
        'basic_cart_plus_price' => array(
            'function' => 'basic_cart_plus_price',
            'variables' => array(
                'price' => NULL
            )
        ),
        'basic_cart_plus_add_to_cart' => array(
            'function' => 'basic_cart_plus_add_to_cart_button',
            'variables' => array(
                'nid' => NULL
            )
        ),
        'basic_cart_plus_cart_flat' => array(
            'template' => 'basic_cart_plus_cart_flat',
            'variables' => array(
                'cart' => NULL,
                'price' => NULL,
                'vat' => NULL
            )
        ),
        'basic_cart_plus_cart_render_block' => array(
            'template' => 'basic_cart_plus_cart_render_block',
            'variables' => array(
                'cart' => NULL,
                'price' => NULL,
                'vat' => NULL
            )
        ),
        'basic_cart_plus_render_cart_element' => array(
            'render element' => 'form'
        )
    );
}
/**
 * Implements hook_block_info().
 */
function basic_cart_plus_block_info()
{
    $blocks['shopping_cart'] = array(
        'info' => t('Shopping cart'),
        'cache' => BACKDROP_NO_CACHE
    );
    return $blocks;
}
/**
 * Implements hook_block_view().
 */
function basic_cart_plus_block_view($delta = '')
{
    // Check if the current user has access.
    switch ($delta) {
        case 'shopping_cart':
            if (user_access('use basic cart')) {
                // Price format.
                module_load_include('inc', 'basic_cart_plus', 'basic_cart_plus.cart');
                $price          = basic_cart_plus_get_total_price();
                $total          = basic_cart_plus_price_format($price->total);
                $options        = array(
                    'cart' => basic_cart_plus_get_cart(),
                    'price' => $total
                );
                // Checking the VAT.
                $vat_is_enabled = (int) config_get('basic_cart_plus.settings', 'basic_cart_plus_vat_state');
                if (!empty($vat_is_enabled) && $vat_is_enabled) {
                    $options['vat'] = basic_cart_plus_price_format($price->vat);
                }
                $block['subject'] = t('Your cart');
                $block['content'] = theme('basic_cart_plus_cart_render_block', $options);
                return $block;
            }
            break;
    }
}
/**
 * Helper function. Returns true if given node (node object or string node type) is a product.
 */
function basic_cart_braintree_is_product($node)
{
    $type       = is_object($node) ? $node->type : $node;
    // Getting node types.
    $node_types = basic_cart_plus_product_types();
    if (empty($node_types) || !is_array($node_types)) {
        return FALSE;
    }
    return in_array($type, $node_types);
}
/**
 * Helper function. Returns an array of basic_cart_braintree product (content) types.
 */
function basic_cart_plus_product_types()
{
    return config_get('basic_cart_plus.settings', 'basic_cart_plus_content_types');
}
/**
 * Implementation hook_views_api()
 */
function basic_cart_plus_views_api()
{
    return array(
        'api' => '3.0',
        'path' => backdrop_get_path('module', 'basic_cart_plus') . '/views'
    );
}


function basic_cart_plus_form_user_profile_form_alter(&$form, &$form_state, $form_id) {
  global $user;
  $current_user = user_load($user->uid);
  if($current_user->uid != 1) {
    $form['field_basic_cart_plus_s_id']['#access'] = FALSE;
  }
}

function basic_cart_plus_preprocess_user_profile(&$vars) {
  global $user;
  $current_user = user_load($user->uid);
  if($current_user->uid != 1) {
    unset($vars['user_profile']['field_basic_cart_plus_s_id']);
  }
}
